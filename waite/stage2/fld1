1.  IF FLUB IS CORRECT, OUTPUT CONSISTS ONLY OF NUMBERED LINES. 
2.  FIRST TWO LINES RELY ON READ NEXT *, WRITE NEXT * AND VAL * = 1 + 0 
    TO ** FAILED. 
    TO ** IF FLG * = * FAILS ON EQUAL.
    TO ** IF FLG * = * TRANSFERS ON UNEQUAL.
    TO ** IF FLG * NE * FAILS ON UNEQUAL. 
    TO ** IF FLG * NE * TRANSFERS ON EQUAL. 
    TO ** IF VAL * = * FAILS ON EQUAL.
    TO ** IF VAL * = * TRANSFERS ON UNEQUAL.
    TO ** IF VAL * NE * FAILS ON UNEQUAL. 
    TO ** IF VAL * NE * TRANSFERS ON EQUAL. 
    TO ** IF PTR * = * FAILS ON EQUAL.
    TO ** IF PTR * = * TRANSFERS ON UNEQUAL.
    TO ** IF PTR * NE * FAILS ON UNEQUAL. 
    TO ** IF PTR * NE * TRANSFERS ON EQUAL. 
    TO ** IF PTR * GE * FAILS ON GREATER. 
    TO ** IF PTR * GE * FAILS ON EQUAL. 
    TO ** IF PTR * GE * TRANSFERS ON LESS.
    FLG * = * FAILS.
    VAL * = PTR * FAILS.
    PTR * = VAL * FAILS.
    VAL * = PTR * CHANGED PTR FIELD.
    VAL * = PTR * CHANGED FLG FIELD.
    PTR * = VAL * CHANGED VAL FIELD.
    PTR * = VAL * CHANGED FLG FIELD.
    FLG * = * CHANGEDTMTR FIELD.
    FLG * = * CHANGED VAL FIELD.
3.  BASIC CONDITIONALS AND ASSIGNMENTS (VAL TO PTR, PTR TO VAL AND FLG
4.  TO FLG) HAVE BEEN CHECKED WITH POSITIVE OPERANDS. 
    VAL * = * + * FAILS FOR ALL +.
    VAL * = * + * CHANGED FLG FIELD  ALL +. 
    VAL * = * + * CHANGED PTR FIELD  ALL+.
5.  THE NEXT TWO CARD NUMBERS TEST VAL * = CHAR AND CHAR = VAL *. 
6.  0 X X X X X X X X X ARE THE CONTENTS OF VAL 0 - VAL 9.
7.  X X X X ARE THE CONTENTS OF PTR 0 - PTR 3.
    VAL * = * - * FAILS  ALL +. 
    VAL * = * - * CHANGED FLG FIELD  ALL+.
    VAL * = * - * CHANGED PTR FIELD  ALL+.
    VAL * = * - * FAILS RES. - OR VAL * = * + * FAILS OP1 -.
    VAL * = * - * CHANGED FLG FIELD  RESULT -.
    VAL * = * - * CHANGED PTR FIELD  RESULT -.
    VAL * = * + * FAILS  OP1 - OP2 + RESULT -.
    VAL * = * + * FAILS  OP1 - OP2 -. 
    VAL * = * - * FAILS  OP1 - OP2 +. 
    VAL * = * - * FAILS  OP1+ OP2-. 
    PTR * = * + * FAILS  ALL +. 
    PTR * = * + * CHANGED FLG FIELD.
    PTR * = * + * CHANGED VAL FIELD.
    PTR * = * - * FAILS ALL +.
    PTR * = * - * CHANGED FLG FIELD ALL +.
    PTR * = * - * CHANGED VAL FIELD  ALL +. 
    PTR * = * - * FAILS  RES. - OR PTR * = * + * FAILS OP 1 -.
    PTR * = * - * CHANGED FLG FIELD  RESULT -.
    PTR * = * - * CHANGED VAL FIELD  RESULT -.
    PTR * = * + * FAILS  OP1 - OP2 + RESULT -.
    PTR * = * + * FAILS  OP1 - OP2 -. 
    PTR * = * - * FAILS  OP1 - OP2 +. 
    PTR * = * - * FAILS  OP1 + OP2 -. 
    VAL * = PTR * FAILS ON -. 
    VAL * = PTR * CHANGED FLG ON -. 
    VAL * = PTR * CHANGED PTR ON -. 
    PTR * = VAL * FAILS ON -. 
    PTR * = VAL * CHANGED FLG ON -. 
    PTR * = VAL * CHANGED VAL ON -. 
    PTR * = * * * FAILS BOTH +. 
    PTR * = * * * CHANGED FLG FIELD  BOTH +.
    PTR * = * * * CHANGED VAL FIELD  BOTH +.
    PTR * = * * * FAILS BOTH -. 
    PTR * = * * * FAILS  OP1 - OP2 +. 
    PTR * = * * * CHANGED FLG FIELD  OP1 - OP2 +. 
    PTR * = * * * CHANGED VAL FIELD  OP1 - OP2 +. 
    PTR * = * * * FAILS  OP1 + OP2 -. 
    PTR * = * / * FAILS  BOTH + INTEGRAL RESULT.
    PTR * = * / * CHANGED FLG FIELD  BOTH + INTEGRAL RESULT.
    PTR * = * / * CHANGED VAL FIELD  BOTH + INTEGRAL RESULT.
    PTR * = * / * FAILS  BOTH - INTEGRAL RESULT.
    PTR * = * / * FAILS  OP1 - OP2 + INTEGRAL RESULT. 
    PTR * = * / * CHANGED FLG FIELD  OP1 - OP2 + INTEGRAL RESULT. 
    PTR * = * / * CHANGED VAL FIELD  OP1 - OP2 +. 
    PTR * = * / * FAILS OP1 + OP2 - INTEGRAL RESULT.
    PTR * = * / * FAILS  BOTH + NON-INTEGRAL QUOTIENT.
    PTR * = * / * CHANGED FLG FIELD BOTH + NON-INTEGRAL QUOTIENT. 
    PTR * = * / * CHANGED VAL FIELD  BOTH +  NON-INTEGRAL QUOTIENT. 
    PTR * = * / * FAILS  OP1 + OP2 - NON-INTEGRAL QUOTIENT. 
    PTR * = * / * CHANGED FLG FIELD  OP1 + OP2 - NON-INTEGRAL QUOTIENT. 
    PTR * = * / * CHANGED VAL FIELD  OP1 + OP2 - NON-INTEGRAL QUOTIENT. 
    TO ** IF VAL * = * TRANSFERS ON OP1 = -OP2. 
    TO ** IF VAL * NE * FAILS ON UNEQUAL, OPPOSITE SIGN.
    TO ** IF PTR * = * TRANSFERS ON OP1 = -OP2. 
    TO ** IF PTR * NE * FAILS ON UNEQUAL, OPPOSITE SIGN.
    TO ** IF PTR * GE * FAILS ON OP1 + OP2 -  ABS OP1 GT ABS OP2. 
    TO ** IF PTR * GE * TRANSFERS ON OP1 - OP2 + ABS OP1 GT ABS OP2.
    TO ** IF PTR * GE * FAILS ON OP1 - OP2 - OP1 GT OP2.
    TO ** IF PTR * GE * TRANSFERS ON OP1 - OP2 - OP2 GT OP1.
8.  FURTHER CONDITIONAL AND REGISTER ARITHMETIC CHECKING IS COMPLETE. 
9.  IF LINE 10 IS MISSING AND 9 DUPLICATED, TO ** BY * FAILED.
10. IF LINE 11 IS MISSING, RETURN BY * FAILED.
11. CHECK OF TO AND RETURN COMPLETED. 
